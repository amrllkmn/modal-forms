{"version":3,"sources":["components/FieldComponent.js","helpers/useRule.js","components/FormComponent.js","components/ModalComponent.js","helpers/useModal.js","App.js","reportWebVitals.js","index.js"],"names":["FieldComponent","id","onAddField","onRemoveField","onAddRule","onRemoveRule","rules","len","Form","Group","Label","Row","className","Col","xs","htmlFor","srOnly","Control","as","custom","value","field3","map","input","index","type","placeholder","length","Button","size","variant","onClick","useRule","useState","title","condition","field1","field2","revenuePercentage","form","setForm","handleAddFields","val","push","input1","new_form","handleRemoveFields","values","splice","handlePercentageChange","e","target","handleAddRule","handleRemoveRule","FormComponent","controlId","rule","InputGroup","hasValidation","aria-label","aria-describedby","onChange","isInvalid","test","Append","Text","Feedback","ModalComponent","isShowing","handleClose","Modal","show","onHide","aria-labelledby","Header","closeButton","Title","Body","useModal","setIsShowing","toggle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fbbad6d.chunk.js","sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction FieldComponent({\r\n    id,\r\n    onAddField,\r\n    onRemoveField,\r\n    onAddRule,\r\n    onRemoveRule,\r\n    rules,\r\n    len,\r\n}) {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label>{`Rule ${id + 1}`}</Form.Label>\r\n            <Form.Row className=\"align-items-center\">\r\n                <Col xs=\"3\" className=\"my-2\">\r\n                    <Form.Label\r\n                        className=\"mr-xs-2\"\r\n                        htmlFor={`inlineFieldSelect1-${id}`}\r\n                        srOnly\r\n                    ></Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        className=\"mr-xs-2\"\r\n                        id={`inlineFieldSelect1-${id}`}\r\n                        custom\r\n                    >\r\n                        <option value=\"1\">aff_sub</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col xs=\"3\" className=\"my-2\">\r\n                    <Form.Label\r\n                        className=\"mr-xs-2\"\r\n                        htmlFor={`inlineFieldSelect2-${id}`}\r\n                        srOnly\r\n                    ></Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        className=\"mr-xs-2\"\r\n                        id={`inlineFieldSelect2-${id}`}\r\n                        custom\r\n                    >\r\n                        <option value=\"1\">is</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col xs={5}>\r\n                    {rules.field3.map((input, index) => (\r\n                        <Form.Row key={`input-${index + 1}`}>\r\n                            <Col>\r\n                                <Form.Control\r\n                                    type=\"input\"\r\n                                    placeholder=\"insert parameter\"\r\n                                />\r\n                            </Col>\r\n                            {rules.field3.length - 1 === index && (\r\n                                <Col xs=\"auto\">\r\n                                    <Button\r\n                                        size=\"sm\"\r\n                                        variant=\"link\"\r\n                                        id={`rule-${id + 1}-add_btn-${\r\n                                            index + 1\r\n                                        }`}\r\n                                        onClick={() => onAddRule(id)}\r\n                                    >\r\n                                        Add rule\r\n                                    </Button>\r\n                                </Col>\r\n                            )}\r\n                            {rules.field3.length !== 1 && (\r\n                                <Col xs=\"auto\">\r\n                                    <Button\r\n                                        size=\"sm\"\r\n                                        variant=\"link\"\r\n                                        id={`rule-${id + 1}-remove_btn-${\r\n                                            index + 1\r\n                                        }`}\r\n                                        className=\"remove-rule\"\r\n                                        onClick={() => onRemoveRule(id, index)}\r\n                                    >\r\n                                        Remove rule\r\n                                    </Button>\r\n                                </Col>\r\n                            )}\r\n                        </Form.Row>\r\n                    ))}\r\n                </Col>\r\n            </Form.Row>\r\n            <Form.Row className=\"align-items-center\">\r\n                {len - 1 === id && (\r\n                    <Col xs=\"auto\" className=\"my-2\">\r\n                        <Button\r\n                            id={`add-btn-${id}`}\r\n                            variant=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={() => onAddField()}\r\n                        >\r\n                            +\r\n                        </Button>\r\n                    </Col>\r\n                )}\r\n                {len !== 1 && (\r\n                    <Col xs=\"auto\" className=\"my-2\">\r\n                        <Button\r\n                            id={`remove-btn-${id}`}\r\n                            variant=\"secondary\"\r\n                            type=\"button\"\r\n                            onClick={() => onRemoveField(id)}\r\n                        >\r\n                            -\r\n                        </Button>\r\n                    </Col>\r\n                )}\r\n            </Form.Row>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default FieldComponent;\r\n","import { useState } from \"react\";\r\n\r\nconst useRule = () => {\r\n    const [form, setForm] = useState({\r\n        title: \"\",\r\n        condition: \"\",\r\n        rules: [{ field1: \"\", field2: \"\", field3: [{ input: \"\" }] }],\r\n        revenuePercentage: \"\",\r\n    });\r\n\r\n    const handlePercentageChange = (e) => {\r\n        const new_form = { ...form };\r\n        new_form.revenuePercentage = e.target.value;\r\n        setForm(new_form);\r\n    };\r\n\r\n    const handleAddFields = () => {\r\n        const val = [...form.rules];\r\n        val.push({\r\n            field1: \"\",\r\n            field2: \"\",\r\n            field3: [{ input1: \"\" }],\r\n        });\r\n\r\n        const new_form = { ...form };\r\n        new_form.rules = val;\r\n        setForm(new_form);\r\n    };\r\n\r\n    const handleAddRule = (index) => {\r\n        const val = [...form.rules[index].field3];\r\n        if (val) {\r\n            val.push({ input: \"\" });\r\n\r\n            const new_form = { ...form };\r\n            new_form.rules[index].field3 = val;\r\n            setForm(new_form);\r\n        }\r\n    };\r\n\r\n    const handleRemoveRule = (id, index) => {\r\n        const val = [...form.rules[id].field3];\r\n        val.splice(index, 1);\r\n        const new_form = { ...form };\r\n        new_form.rules[id].field3 = val;\r\n        setForm(new_form);\r\n    };\r\n    const handleRemoveFields = (index) => {\r\n        const values = [...form.rules];\r\n        values.splice(index, 1);\r\n        const new_form = { ...form };\r\n        new_form.rules = values;\r\n        setForm(new_form);\r\n    };\r\n\r\n    return {\r\n        form,\r\n        handleAddFields,\r\n        handleRemoveFields,\r\n        handlePercentageChange,\r\n        handleAddRule,\r\n        handleRemoveRule,\r\n    };\r\n};\r\n\r\nexport default useRule;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FieldComponent from \"./FieldComponent\";\r\nimport useRule from \"../helpers/useRule\";\r\nimport { useState } from \"react\";\r\n\r\nfunction FormComponent() {\r\n    const {\r\n        form,\r\n        handleAddFields,\r\n        handleRemoveFields,\r\n        handlePercentageChange,\r\n        handleAddRule,\r\n        handleRemoveRule,\r\n    } = useRule();\r\n    return (\r\n        <Form>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"revenueGroupTitle\">\r\n                    <Form.Label>Revenue Group Title</Form.Label>\r\n                    <Form.Control type=\"input\" placeholder=\"\" />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"align-items-center\">\r\n                If\r\n                <Col xs=\"auto\" className=\"my-2\">\r\n                    <Form.Label\r\n                        className=\"mr-sm-2\"\r\n                        htmlFor=\"inlineConditionSelect\"\r\n                        srOnly\r\n                    >\r\n                        Preference\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        className=\"mr-sm-2\"\r\n                        id=\"inlineConditionSelect\"\r\n                        custom\r\n                    >\r\n                        <option value=\"1\">ALL</option>\r\n                        <option value=\"2\">ANY</option>\r\n                        <option value=\"3\">NONE</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                of the below conditions are met\r\n            </Form.Row>\r\n            {form.rules.map((rule, index) => {\r\n                return (\r\n                    <FieldComponent\r\n                        key={`rule-${index + 1}`}\r\n                        id={index}\r\n                        onAddField={handleAddFields}\r\n                        onRemoveField={handleRemoveFields}\r\n                        len={form.rules.length}\r\n                        rules={rule}\r\n                        onAddRule={handleAddRule}\r\n                        onRemoveRule={handleRemoveRule}\r\n                    />\r\n                );\r\n            })}\r\n            <Form.Row className=\"align-items-center\">\r\n                then revenue is\r\n                <Col xs={3} className=\"my-2\">\r\n                    <InputGroup hasValidation>\r\n                        <Form.Control\r\n                            placeholder=\"15\"\r\n                            aria-label=\"Revenue percentage\"\r\n                            aria-describedby=\"percentage\"\r\n                            type=\"text\"\r\n                            value={form.revenuePercentage}\r\n                            onChange={handlePercentageChange}\r\n                            isInvalid={\r\n                                form.revenuePercentage !== \"\" &&\r\n                                !/^[0-9\\b]+$/.test(form.revenuePercentage)\r\n                            }\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text id=\"percentage\">%</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please insert a number.\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Form.Row>\r\n            <Form.Row className=\"align-items-center\">\r\n                <Col xs=\"auto\" className=\"my-2\">\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"my-2\">\r\n                    <Button variant=\"secondary\" type=\"reset\">\r\n                        Cancel\r\n                    </Button>\r\n                </Col>\r\n            </Form.Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FormComponent;\r\n","import Modal from \"react-bootstrap/Modal\";\r\nimport FormComponent from \"./FormComponent\";\r\n\r\nconst ModalComponent = ({ isShowing, handleClose }) => {\r\n    return (\r\n        <Modal\r\n            show={isShowing}\r\n            onHide={handleClose}\r\n            aria-labelledby=\"modal-form\"\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"modal-form\">Add Revenue Group</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <FormComponent />\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalComponent;\r\n","import { useState } from \"react\";\r\n\r\nconst useModal = () => {\r\n    const [isShowing, setIsShowing] = useState(false);\r\n\r\n    function toggle() {\r\n        setIsShowing(!isShowing);\r\n    }\r\n\r\n    return {\r\n        isShowing,\r\n        toggle,\r\n    };\r\n};\r\n\r\nexport default useModal;\r\n","import \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ModalComponent from \"./components/ModalComponent\";\n\nimport useModal from \"./helpers/useModal\";\n\nfunction App() {\n    const { isShowing, toggle } = useModal();\n    return (\n        <>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <p>Involve Asia Coding Test</p>\n                    <Button variant=\"primary\" onClick={toggle}>\n                        Open Modal Form\n                    </Button>\n                </header>\n            </div>\n            <ModalComponent\n                isShowing={isShowing}\n                handleClose={toggle}\n            ></ModalComponent>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}